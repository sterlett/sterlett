global
    log stdout format raw local0 debug
    pidfile /var/run/haproxy.pid
    maxconn 10000
    master-worker

resolvers docker
    nameserver dns1 127.0.0.11:53

defaults
    log global

    timeout connect 10s
    timeout client 30s
    timeout server 30s
    # for how long we will slow down each connection from the limited IPs (before sending a deny status).
    timeout tarpit 1m

    mode http

    option httplog

frontend public
    bind *:80

    # 6.3 Mb in-memory table for rate limiting / tarpitting (4h ip ban for rpm > 360).
    # (50 + 4 + 12) * 100000 ~= 6.3 Mb.
    stick-table type ip size 100k expire 4h store gpc0,http_req_rate(1m)
    # waiting a request payload for 5 secs and updating a sticky counter (id 0) for the IP.
    tcp-request inspect-delay 5s
    tcp-request content track-sc0 src
    # incrementing a general purpose counter (id 0), which will hold a ban status for our clients.
    acl too_many_requests sc_http_req_rate(0) gt 360
    http-request sc-inc-gpc0(0) if too_many_requests
    # slowing down client connections if they have exceeded the rpm threshold.
    # sc_get_gpc0(0) stands for "get value of the gpc0 for sc with id 0, i.e. for sc0".
    acl ip_banned sc_get_gpc0(0) gt 0
    http-request tarpit deny_status 502 if ip_banned

    # private networks are: docker ingress (services) and the host machine.
    acl in_private_network src 10.0.0.0/8 172.0.0.0/8

    acl PATH_stats path_beg -i /stats
    acl PATH_api path_beg -i /api/

    use_backend be_stats if PATH_stats in_private_network
    use_backend be_api if PATH_api
    default_backend be_static

backend be_stats
    stats enable
    stats uri /stats
    stats admin if TRUE
    stats refresh 30s
    stats show-legends
    stats show-node

backend be_static
    balance roundrobin
    server static lighttpd:6635 check inter 5000

    option httpchk GET / HTTP/1.1
    http-check send hdr Host "haproxy-health-check"
    http-check expect status 200

    option httpclose

backend be_api
    balance roundrobin
    server-template app 3 app:6637 check inter 5000 resolvers docker init-addr libc,none

    option httpchk GET / HTTP/1.1
    http-check expect rstatus 200|404

    http-request set-path %[path,regsub(^/api/?,/)]

    option httpclose

listen database_lb
    bind *:3307
    mode tcp

    timeout client 900s
    timeout server 900s

    # database instance (or a tunnel to the separate cluster) will be available only for internal services
    acl ingress_network src 10.0.0.0/8
    tcp-request connection reject unless ingress_network

    balance static-rr
    server static database:3306 check inter 5000

    option mysql-check user haproxy post-41

# todo: sticky session support is needed in the ReactPHP WebDriver, to use load balancing for the hub correctly
listen webdriver_lb
    bind *:4454

    # selenium hub replicas will be available only for other internal services
    acl ingress_network src 10.0.0.0/8
    http-request silent-drop unless ingress_network

    balance static-rr
    server static selenium-hub:4444 check inter 5000

    # todo: configure a cookie insert directive, to maintain a persistent browsing session for the same app replicas

    option httpchk OPTIONS /wd/hub HTTP/1.1
    http-check expect status 400
