#!/usr/bin/env php
<?php

/*
 * This file is part of the Sterlett project <https://github.com/sterlett/sterlett>.
 *
 * (c) 2020-2021 Pavel Petrov <itnelo@gmail.com>.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @license https://opensource.org/licenses/GPL-3.0 GPL-3.0
 */

declare(strict_types=1);

use Sterlett\Application;
use Sterlett\Bridge\Symfony\Component\DependencyInjection\Configurator\YamlConfigurator;
use Symfony\Component\EventDispatcher\DependencyInjection\RegisterListenersPass;

require_once __DIR__ . '/../vendor/autoload.php';

define('PROJECT_DIR', realpath(__DIR__ . '/../'));
define('PROJECT_CACHE_DIR', PROJECT_DIR . '/var/cache');

$parameterFilePath = __DIR__ . '/../config/parameters.yml';

if (!file_exists($parameterFilePath)) {
    throw new RuntimeException("File 'parameters.yml' is missing. Please, put it into the 'config' directory.");
}

$containerConfigurator = new YamlConfigurator();
$containerConfigurator->setEnvironmentFilePath(__DIR__ . '/../.env');
$containerConfigurator->setParameterFilePath($parameterFilePath);
$containerConfigurator->setDefinitionFilePaths(
    [
        __DIR__ . '/../config/services.yml',
        // async
        __DIR__ . '/../config/services/async/loggers.yml',
        __DIR__ . '/../config/services/async/event_loop.yml',
        __DIR__ . '/../config/services/async/server.yml',
        __DIR__ . '/../config/services/async/clients.yml',
        __DIR__ . '/../config/services/async/streams.yml',
        __DIR__ . '/../config/services/async/threads.yml',
        __DIR__ . '/../config/services/async/routines.yml',
        __DIR__ . '/../config/services/async/event_dispatcher.yml',
        __DIR__ . '/../config/services/async/database_connections.yml',
        // common
        __DIR__ . '/../config/services/shutdown.yml',
        __DIR__ . '/../config/services/event_listeners.yml',
        __DIR__ . '/../config/services/retry_assistant.yml',
        // http
        __DIR__ . '/../config/services/request/uri_normalizers.yml',
        __DIR__ . '/../config/services/request/uri_matcher.yml',
        __DIR__ . '/../config/services/request/handler.yml',
        // browser
        __DIR__ . '/../config/services/selenium_webdriver.yml',
        __DIR__ . '/../config/services/browser.yml',
        // PassMark
        __DIR__ . '/../config/services/passmark/parsers.yml',
        // HardPrice
        __DIR__ . '/../config/services/hardprice/item_parser.yml',
        __DIR__ . '/../config/services/hardprice/price_parsers.yml',
        __DIR__ . '/../config/services/hardprice/store_mapper.yml',
        // HardPrice (gen 3)
        __DIR__ . '/../config/services/hardprice/browser/divergent.yml',
        __DIR__ . '/../config/services/hardprice/browser/navigator.yml',
        __DIR__ . '/../config/services/hardprice/browser/item_reader.yml',
        __DIR__ . '/../config/services/hardprice/browser/item_searcher.yml',
        __DIR__ . '/../config/services/hardprice/browser/price_reader.yml',
        __DIR__ . '/../config/services/hardprice/browser/price_accumulator.yml',
        // hardware
        __DIR__ . '/../config/services/hardware/benchmark_repository.yml',
        __DIR__ . '/../config/services/hardware/benchmark_retriever.yml',
        __DIR__ . '/../config/services/hardware/benchmark_collectors.yml',
        __DIR__ . '/../config/services/hardware/benchmark_providers.yml',
        __DIR__ . '/../config/services/hardware/price_repository.yml',
        __DIR__ . '/../config/services/hardware/price_providers.yml',
        __DIR__ . '/../config/services/hardware/price_retriever.yml',
        __DIR__ . '/../config/services/hardware/price_calculators.yml',
        __DIR__ . '/../config/services/hardware/vbratio_repository.yml',
        __DIR__ . '/../config/services/hardware/vbratio_source_binder.yml',
        __DIR__ . '/../config/services/hardware/vbratio_calculator.yml',
        __DIR__ . '/../config/services/hardware/vbratio_providers.yml',
        __DIR__ . '/../config/services/hardware/vbratio_feeder.yml',
        __DIR__ . '/../config/services/hardware/vbratio_packer.yml',
        __DIR__ . '/../config/services/hardware/vbratio_saver.yml',
        __DIR__ . '/../config/services/hardware/deal_observer.yml',
    ]
);
$containerConfigurator->setDefinitionDefaultsFilePath(__DIR__ . '/../config/services.yml');

$container = $containerConfigurator->getContainerBuilder();
$container->addCompilerPass(new RegisterListenersPass('event_dispatcher', 'psr14.event_listener'));
//$container->addCompilerPass(new RegisterEvenementListenersPass());

// we are starting an async web server with some concurrent code
// so we don't need any container caching logic for this case.
$container->compile(true);

$application = new Application($container);
$application->run();
